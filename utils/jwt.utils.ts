import jwt from 'jsonwebtoken'

const privateKey = `-----BEGIN RSA PRIVATE KEY-----
MIIJKAIBAAKCAgEAvXJg7MscPu6SP2WXHTR1LV9ELB5HVwhRZVg4XH7XrhSq6bH0
qhp7n2X0xn/+M1z4UyvYbQvFPQ0vz1aqPCu1HM26Ezva0/CUxLjBZM15jcowIChx
CjtP90aCKV4suidMFGOh5XnpJA6G24FzVvp9jzGZCL372u7UYJ+A7eY0X61ujT3S
DXgpzWCzUKllrvTEfGRNqCQrZDM7tCZEYMExxZclsyx3q78ccQ604RGRhw6kNu0A
3ITcrTh+FGs51zy6Z0tthuAtPSIhryB/mtWRSbL4R8VSSebDp6y68KfubK8N0S5C
nJQraZkciTV9P83YSQy1z3VLLJVczyPmlPuf9kOHU3lEWBU81PevQqW3Q/86UJDm
e4WZa5PU1iIH614OnKYwNAWvUXa0zk6rBszlTfXURwPxLz7w/BPV20pcaRDAgRfK
M9pKwSnbNoEQ4N2DoBCoSYHmYOOHIzMGyr8SKjbk7ks3VCv7qrBDx4YVsGxhKf7h
svSG+2mBRBZSp1i8JzQeAAjHRy4afQiru4X05pUR7dWAXGtCFdsl5xwAyJ9V4Nt6
0TS+lrN9C37PY0E/SAAsn791HThGzG5akkBq/IftM3361xKWsIPbq9ccyrIzy/Z2
St3E6U0bdxd7nzgXfVWrjw8aFxo9THdvCdR8a1sIQJ2wPIQR2QXco90IGbcCAwEA
AQKCAgBuzkOavIHc3TV1Fzp3voL68smw9FTNtvPEzwDIOPh1vWjqH0f3Zl4AMWYl
5B8Oc8Za/z4rKcNHnjrkjtArOXVJT5sSPOQVKpYZKecTyoraP/Q+GuljDqYK/5aK
E6cdinaZRl0fF1sh181Q/jo0GXbvFhdoYZa5yw81JJYIj6j6fTo4Knx9nFb25SR8
fVgYKNnz18cEHYOzq7Oz/t3nqZgu9eT7E3s7XSCJkAyDx/7Se+HYrm7ejGd2eaBk
2QKPvdlZKWj6hoxvQVNqVxvLuDauYJuPfv5Oc0bk/8ank9GEiC8QtnoHkzKBJSjn
p/2GICPtNh3xJa2+ee46ycjIQxSft+UwH0wlZ0hgWKQATWK4vcyIiQqQGKZQS+XB
QYz73J8UVuWKZAz62C+KjYWBmzSoGTOqQN0bGwQXWJvZ46NAOaj/VtjNZglU9dXh
PzMwDElFh9LReZx8LgIh+i0wulp2ugLFZ53Xr8JZpjY3QoIk7IfzTBX929H73tbi
9Znvqr3f91YpfbuTENO8yIH4DlsS7uYJzeX8LdUSllsoWf03ZLlJXz4/ZUgTnpys
n2ebdzbpWwHuR/1bE3NsVmVmxLn1GHAvVTW1UbKGcKM20lsJkOKqrlqJFm7Q8JC9
wH9fYOCBSGwiZvSS0RYuErL0qJK01aEKJ6num0CQIZ42udVAAQKCAQEA3shABtBO
48TAdAnbdbTPVi+Kl543VE4kwZWTjKTccxTlwNge6zJt2E6djEkZazxyI7LmnH3S
8D0yzkxY754XOKYXRKUaaJtJ3OLQujyggz6mH/QCHUrYkjP6vNPX7fMTFBbsQJfk
8VjuYdgIHGZDKxPnHT8L/yoTSTz9qkMdA3e+nEiFWi1dea19ZKJL6ZHEaieddhzV
QjkRoGCoolfcpFWxAy9Y3SUK6VZ3awZE3JmBWjzprxtMqZ5RAcu3q9tWs+v3+p8S
fOGglsbdCi7smGLuK1P0FvwMm432+PKyd4mqNrK0ZxK8uPCvwMyqaAC0XySmzg9H
XE6j64gD4YIBtwKCAQEA2bGxMJn95aSWjRLluOzbSru2Cq3aHdtdkRrQhP8O9eiV
mNlzGWxp+3RpJTlNF8fFebxEkIp+va1wcWgnSjoBnbLBqU9VIX+gxC0A5cLP6sGq
PsKWweEwyTp5dNeYEpN510Y5iYTpg9GAmMsiK2fWTaNICXUQriT/GDUW6+GOoSa8
68gd4N6rWgifmjbmPtc5Sex5HKHIzDj3HehhrTUUrfrUgZxJ+EmxJQDBrXFe8SWt
vOpHlrl70K2qgjYhAsczXpaeWHLpexMRWPfM0C0FGo/0TnqGiNy90Pvd++EbxF/4
FkD9XSgDLLFbLZyG1Hwo1i7h2puL10dkbOodMMqoAQKCAQA1PmjG+BwSpaBVW1G/
BPKUp5IZAHA6zt5MAeKct34UZwcuGrjw/0FvdAKFV6cikPS6gXRKLGwwjH/K/EY5
JnBoUpG3DzqLi6mQiAjYqcq2808izd9/frbZ4mBnpr2xmemSYJQgL+1AnT+D1OzD
VNFyxzPyMnI8jqLDWzdI7PdPL9w3X8G3NqZjgUo5tewsq3Dk6gjhBK0XQapryQ4k
lpkeEXjXyQYU/FhqQgcSZhIpIureVTaIah7dXv//TN/dy/Mh1yCSHlh9zjLiNi73
0xUqqmI/qrXolF6zAq/m+aIbnaQ3pGgnRjwieyuWCZQkfR6eqpTPJKmqbwUQMpay
265rAoIBAQDF8y8k+5IE5HHFnB5p1m7deOzirw18QsHFNXXQycEH2NNXJrvjrVJ9
xW/q2j0A17X4qTpLmLQAtBpf9Q5tD2vywt4Yn7vQdyZv3GBJjKjVVf8BjJ3bdHKR
OGvC1FxC3/lVyFR/eO2B4NonlebfQ096T3QsrVdakuenUnciTHsOjJQTbmfE15VG
jDrc1vjswXYlgzLp1y8ojNAgUPOotXC1dzUPGlekvxWmiRaUKVfkvZdLBlnMc6Nj
sNcwChpgVVSfuSQJV4x5TnBizwldbuKKMcY8Kmv1PYwY4T4MULiYC5AiZDw/Higs
1qULR57OzouvnvfeebxiKFfoNcYPXOgBAoIBACjq2ShR2/MYz94S+HnGUbpbe9Ul
ep+TO8430gv+ofIhqynR9AKJQqYmznOF6rlRNb5BOCzWmb8jZalkjlJj7FCaUX/L
IMvHjHtraHfv0d/AfBMIHYl/dDSvkcxr+b9BPxunIVdbocodVpI1jM9tntNYKdGC
5y3bk8y7xdIrgdUpRf8dzuGn9JL+maeyySRWWz82So5xtHaFiLaP2PZWFDQwVXkH
fJXzomse+m85NZ1JrC2zVN+uUYTVgXooahEwYuFtkKrAHK7WA4xSPjLbLBHp0Rh8
TSNRsU6vRpulcmGFozSkTVrGef8euS0FJOnNfnVNji1sSGbFe6vQdCehr1s=
-----END RSA PRIVATE KEY-----`;


const publicKey = `-----BEGIN PUBLIC KEY-----
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvXJg7MscPu6SP2WXHTR1
LV9ELB5HVwhRZVg4XH7XrhSq6bH0qhp7n2X0xn/+M1z4UyvYbQvFPQ0vz1aqPCu1
HM26Ezva0/CUxLjBZM15jcowIChxCjtP90aCKV4suidMFGOh5XnpJA6G24FzVvp9
jzGZCL372u7UYJ+A7eY0X61ujT3SDXgpzWCzUKllrvTEfGRNqCQrZDM7tCZEYMEx
xZclsyx3q78ccQ604RGRhw6kNu0A3ITcrTh+FGs51zy6Z0tthuAtPSIhryB/mtWR
SbL4R8VSSebDp6y68KfubK8N0S5CnJQraZkciTV9P83YSQy1z3VLLJVczyPmlPuf
9kOHU3lEWBU81PevQqW3Q/86UJDme4WZa5PU1iIH614OnKYwNAWvUXa0zk6rBszl
TfXURwPxLz7w/BPV20pcaRDAgRfKM9pKwSnbNoEQ4N2DoBCoSYHmYOOHIzMGyr8S
Kjbk7ks3VCv7qrBDx4YVsGxhKf7hsvSG+2mBRBZSp1i8JzQeAAjHRy4afQiru4X0
5pUR7dWAXGtCFdsl5xwAyJ9V4Nt60TS+lrN9C37PY0E/SAAsn791HThGzG5akkBq
/IftM3361xKWsIPbq9ccyrIzy/Z2St3E6U0bdxd7nzgXfVWrjw8aFxo9THdvCdR8
a1sIQJ2wPIQR2QXco90IGbcCAwEAAQ==
-----END PUBLIC KEY-----`;

export function signJwt(payload) {
    return jwt.sign(payload,privateKey,{algorithm:'RS256'})
}

export function decode(token: string) {
    if(!token) return null
    try {
        const decoded =jwt.verify(token,publicKey)
        return decoded
    } catch (error) {
        console.error(`error`,error);
        return null
    }
}